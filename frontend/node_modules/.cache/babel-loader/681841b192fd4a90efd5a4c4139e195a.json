{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katar\\\\Desktop\\\\Studia\\\\III Rok\\\\SmartHome\\\\SmartHome-front\\\\frontend\\\\src\\\\components\\\\AddSensorForm.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddSensorsForm = _ref => {\n  _s();\n\n  let {\n    setSensors,\n    user\n  } = _ref;\n  const [error, setError] = useState(\"\");\n  const nameRef = useRef();\n  const roomRef = useRef();\n  const typeRef = useRef();\n\n  const handleAddSensor = async e => {\n    e.preventDefault();\n\n    if (nameRef.current.value.length < 3) {\n      setError(\"Name must have at least 3 characters\");\n      return;\n    }\n\n    if (roomRef.current.value.length < 3) {\n      setError(\"Room must have at least 3 characters\");\n      return;\n    }\n\n    if (typeRef.current.value.length < 3) {\n      setError(\"Type must have at least 3 characters\");\n      return;\n    }\n\n    setError(\"\");\n    const headers = {\n      Authorization: `Bearer ${user.token}`\n    };\n    await axios({\n      method: \"post\",\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors`,\n      data: {\n        name: nameRef.current.value,\n        room: roomRef.current.value,\n        type: typeRef.current.value\n      },\n      headers\n    });\n    nameRef.current.value = \"\";\n    roomRef.current.value = \"\";\n    typeRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-5 border border-secondary ml-3 mt-3 h-2 d-flex justify-content-center\",\n      style: {\n        width: \"70rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"addSensorWrapper\",\n        onSubmit: handleAddSensor,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add new sensor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter name\",\n            ref: nameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter room\",\n            ref: roomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter type\",\n            ref: typeRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"loginButton\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddSensorsForm, \"OYTBEtQSvR5Fj+g3qF89ir8FL24=\");\n\n_c = AddSensorsForm;\nexport default AddSensorsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSensorsForm\");","map":{"version":3,"sources":["C:/Users/katar/Desktop/Studia/III Rok/SmartHome/SmartHome-front/frontend/src/components/AddSensorForm.js"],"names":["Button","Form","Alert","Card","axios","useState","useRef","AddSensorsForm","setSensors","user","error","setError","nameRef","roomRef","typeRef","handleAddSensor","e","preventDefault","current","value","length","headers","Authorization","token","method","url","process","env","REACT_APP_URL_BASE","data","name","room","type","width"],"mappings":"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","sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst AddSensorsForm = ({ setSensors, user }) => {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const nameRef = useRef();\r\n  const roomRef = useRef();\r\n  const typeRef = useRef();\r\n\r\n  const handleAddSensor = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nameRef.current.value.length < 3) {\r\n      setError(\"Name must have at least 3 characters\");\r\n      return;\r\n    }\r\n    if (roomRef.current.value.length < 3) {\r\n      setError(\"Room must have at least 3 characters\");\r\n      return;\r\n    }\r\n    if (typeRef.current.value.length < 3) {\r\n      setError(\"Type must have at least 3 characters\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n\r\n    const headers = {\r\n      Authorization: `Bearer ${user.token}`,\r\n    };\r\n\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors`,\r\n      data: {\r\n        name: nameRef.current.value,\r\n        room: roomRef.current.value,\r\n        type: typeRef.current.value,\r\n      },\r\n      headers,\r\n    });\r\n\r\n    nameRef.current.value = \"\";\r\n    roomRef.current.value = \"\";\r\n    typeRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Card\r\n        className=\"p-5 border border-secondary ml-3 mt-3 h-2 d-flex justify-content-center\"\r\n        style={{ width: \"70rem\" }}\r\n      >\r\n        <Form className=\"addSensorWrapper\" onSubmit={handleAddSensor}>\r\n          <h1>Add new sensor</h1>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control placeholder=\"Enter name\" ref={nameRef} />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Room</Form.Label>\r\n            <Form.Control placeholder=\"Enter room\" ref={roomRef} />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Type</Form.Label>\r\n            <Form.Control placeholder=\"Enter type\" ref={typeRef} />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"loginButton\">\r\n            Add\r\n          </Button>\r\n          {error ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSensorsForm;\r\n"]},"metadata":{},"sourceType":"module"}