{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katar\\\\Desktop\\\\Studia\\\\III Rok\\\\SmartHome\\\\SmartHome-front\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport Header from \"./header\";\nimport axios from \"axios\";\nimport SensorCard from \"./Card\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  _s();\n\n  let {\n    user,\n    handleLogout,\n    sensors,\n    setSensors\n  } = _ref;\n\n  const getAllSensors = async () => {\n    const headers = {\n      Authorization: `Bearer ${user.token}`\n    };\n    const response = await axios({\n      method: \"get\",\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors`,\n      headers\n    });\n    setSensors(response.data);\n  };\n\n  useEffect(() => {\n    getAllSensors();\n  }, []);\n\n  const handleToggleSensor = async (id, isActivated) => {\n    const headers = {\n      Authorization: `Bearer ${user.token}`\n    };\n    await axios({\n      method: \"patch\",\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors/${id}`,\n      data: {\n        isActivated: isActivated\n      },\n      headers\n    });\n  };\n\n  const handleRemoveSensor = async id => {\n    const headers = {\n      Authorization: `Bearer ${user.token}`\n    };\n    await axios({\n      method: \"delete\",\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors/${id}`,\n      headers\n    });\n  };\n\n  const ActiveSensors = sensors.reduce((sum, item) => item.isActivated ? sum + 1 : sum, 0);\n  const notActiveSensorsCounter = sensors.length - ActiveSensors;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-5 border border-secondary ml-3 mt-3 h-2 d-flex justify-content-center\",\n        style: {\n          width: \"70rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"activeSensorsHeader\",\n            children: \"Sensors status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activeSensorsCardsWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activeSensorsCard\",\n              children: [\"Active sensors: \", ActiveSensors]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activeSensorsCard\",\n              children: [\"Inactive sensors: \", notActiveSensorsCounter]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"dashboardWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Available Sensors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sensorsListWrapper\",\n            children: sensors.map(sensor => /*#__PURE__*/_jsxDEV(SensorCard, {\n              sensor: sensor,\n              handleToggleSensor: handleToggleSensor,\n              handleRemoveSensor: handleRemoveSensor\n            }, sensor._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/katar/Desktop/Studia/III Rok/SmartHome/SmartHome-front/frontend/src/components/Dashboard.js"],"names":["useEffect","Header","axios","SensorCard","Card","Dashboard","user","handleLogout","sensors","setSensors","getAllSensors","headers","Authorization","token","response","method","url","process","env","REACT_APP_URL_BASE","data","handleToggleSensor","id","isActivated","handleRemoveSensor","ActiveSensors","reduce","sum","item","notActiveSensorsCounter","length","width","map","sensor","_id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,MAAMC,SAAS,GAAG,QAAiD;AAAA;;AAAA,MAAhD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,GAAgD;;AACjE,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAG,UAASN,IAAI,CAACO,KAAM;AADtB,KAAhB;AAGA,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAC;AAC3Ba,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,iBAFZ;AAG3BR,MAAAA;AAH2B,KAAD,CAA5B;AAMAF,IAAAA,UAAU,CAACK,QAAQ,CAACM,IAAV,CAAV;AACD,GAXD;;AAaApB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,kBAAkB,GAAG,OAAOC,EAAP,EAAWC,WAAX,KAA2B;AACpD,UAAMZ,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAG,UAASN,IAAI,CAACO,KAAM;AADtB,KAAhB;AAGA,UAAMX,KAAK,CAAC;AACVa,MAAAA,MAAM,EAAE,OADE;AAEVC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,mBAAkBG,EAAG,EAFlD;AAGVF,MAAAA,IAAI,EAAE;AACJG,QAAAA,WAAW,EAAEA;AADT,OAHI;AAMVZ,MAAAA;AANU,KAAD,CAAX;AAQD,GAZD;;AAcA,QAAMa,kBAAkB,GAAG,MAAOF,EAAP,IAAc;AACvC,UAAMX,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAG,UAASN,IAAI,CAACO,KAAM;AADtB,KAAhB;AAGA,UAAMX,KAAK,CAAC;AACVa,MAAAA,MAAM,EAAE,QADE;AAEVC,MAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,mBAAkBG,EAAG,EAFlD;AAGVX,MAAAA;AAHU,KAAD,CAAX;AAKD,GATD;;AAWA,QAAMc,aAAa,GAAGjB,OAAO,CAACkB,MAAR,CACpB,CAACC,GAAD,EAAMC,IAAN,KAAgBA,IAAI,CAACL,WAAL,GAAmBI,GAAG,GAAG,CAAzB,GAA6BA,GADzB,EAEpB,CAFoB,CAAtB;AAIA,QAAME,uBAAuB,GAAGrB,OAAO,CAACsB,MAAR,GAAiBL,aAAjD;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEnB,IAAd;AAAoB,MAAA,YAAY,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,yEADZ;AAEE,QAAA,KAAK,EAAE;AAAEwB,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA,gCAIE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,6CACmBN,aADnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,+CACqBI,uBADrB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAgBE;AAAS,UAAA,SAAS,EAAC,kBAAnB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,sBACGrB,OAAO,CAACwB,GAAR,CAAaC,MAAD,iBACX,QAAC,UAAD;AAEE,cAAA,MAAM,EAAEA,MAFV;AAGE,cAAA,kBAAkB,EAAEZ,kBAHtB;AAIE,cAAA,kBAAkB,EAAEG;AAJtB,eACOS,MAAM,CAACC,GADd;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAvFD;;GAAM7B,S;;KAAAA,S;AAyFN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport Header from \"./header\";\r\nimport axios from \"axios\";\r\nimport SensorCard from \"./Card\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst Dashboard = ({ user, handleLogout, sensors, setSensors }) => {\r\n  const getAllSensors = async () => {\r\n    const headers = {\r\n      Authorization: `Bearer ${user.token}`,\r\n    };\r\n    const response = await axios({\r\n      method: \"get\",\r\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors`,\r\n      headers,\r\n    });\r\n\r\n    setSensors(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllSensors();\r\n  }, []);\r\n\r\n  const handleToggleSensor = async (id, isActivated) => {\r\n    const headers = {\r\n      Authorization: `Bearer ${user.token}`,\r\n    };\r\n    await axios({\r\n      method: \"patch\",\r\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors/${id}`,\r\n      data: {\r\n        isActivated: isActivated,\r\n      },\r\n      headers,\r\n    });\r\n  };\r\n\r\n  const handleRemoveSensor = async (id) => {\r\n    const headers = {\r\n      Authorization: `Bearer ${user.token}`,\r\n    };\r\n    await axios({\r\n      method: \"delete\",\r\n      url: `${process.env.REACT_APP_URL_BASE}/api/v1/sensors/${id}`,\r\n      headers,\r\n    });\r\n  };\r\n\r\n  const ActiveSensors = sensors.reduce(\r\n    (sum, item) => (item.isActivated ? sum + 1 : sum),\r\n    0\r\n  );\r\n  const notActiveSensorsCounter = sensors.length - ActiveSensors;\r\n\r\n  return (\r\n    <div>\r\n      <Header user={user} handleLogout={handleLogout} />\r\n\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Card\r\n          className=\"p-5 border border-secondary ml-3 mt-3 h-2 d-flex justify-content-center\"\r\n          style={{ width: \"70rem\" }}\r\n        >\r\n          <section>\r\n            <h2 className=\"activeSensorsHeader\">Sensors status</h2>\r\n            <div className=\"activeSensorsCardsWrapper\">\r\n              <div className=\"activeSensorsCard\">\r\n                Active sensors: {ActiveSensors}\r\n              </div>\r\n              <div className=\"activeSensorsCard\">\r\n                Inactive sensors: {notActiveSensorsCounter}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"dashboardWrapper\">\r\n            <h2>Available Sensors</h2>\r\n            <div className=\"sensorsListWrapper\">\r\n              {sensors.map((sensor) => (\r\n                <SensorCard\r\n                  key={sensor._id}\r\n                  sensor={sensor}\r\n                  handleToggleSensor={handleToggleSensor}\r\n                  handleRemoveSensor={handleRemoveSensor}\r\n                />\r\n              ))}\r\n            </div>\r\n          </section>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}